{"version":3,"sources":["components/AddCategory.js","components/GifGridItm.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","GifGridItm","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","id","images","downsized_medium","console","log","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"6KAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAiB9C,OACI,sBAAMC,SAVW,SAAEC,GACnBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,MAKlB,SACI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SAlBc,SAACP,GACvBF,EAAeE,EAAEQ,OAAOF,a,QCNnBG,EAAa,SAAC,GAAsB,IAAnBC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,IACjC,OACI,sBAAKC,UAAU,yCAAf,UACI,qBAAKC,IAAMF,EAAMG,IAAMJ,IACvB,6BAAMA,Q,uBCLLK,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,sEAEA,mCACTN,EAHS,iDAGuCO,UAAWF,GAHlD,6BAEA,oCAFA,SAIIG,MAAOR,GAJX,cAITS,EAJS,gBAKQA,EAAKC,OALb,uBAKPC,EALO,EAKPA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRhB,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIE,cAAN,aAAE,EAAYC,iBAAiBjB,QAX3B,kBAeRY,GAfQ,kCAkBfM,QAAQC,IAAR,MAlBe,0DAAH,sDCKPC,EAAU,SAAC,GAAkB,IAAhBf,EAAe,EAAfA,SAAe,ECHb,SAAEA,GAAe,IAAD,EAEdpB,mBAAS,CAC/B0B,KAAM,GACNU,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAiBxC,OAVAC,qBAAU,WACNpB,EAASC,GACRoB,MAAM,SAAAC,GACHH,EAAS,CACLZ,KAAMe,EACNL,SAAS,SAGlB,IAEIC,EDZ2BK,CAActB,GAAlCW,EAFuB,EAE7BL,KAAcU,EAFe,EAEfA,QAEtB,OACI,qCACI,qBAAIpB,UAAU,oCAAd,cAAqDI,EAArD,OACEgB,GAAW,mBAAGpB,UAAU,6CAAb,qBACb,qBAAKA,UAAU,YAAf,SAEQe,EAAOH,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAESA,GADCA,EAAIC,aEdzBa,EAAe,WAAO,IAAD,EAEM3C,mBAAS,CAAC,cAFhB,mBAEvB4C,EAFuB,KAEX7C,EAFW,KAI9B,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAE7B,uBAEA,6BAEQ6C,EAAWhB,KAAK,SAAAR,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAWA,GADLA,YCdlCyB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.d751bc7e.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue( e.target.value )\r\n    }\r\n\r\n    const handleSubmit = ( e ) => {\r\n        e.preventDefault();\r\n\r\n        if( inputValue.trim().length > 2 ) {\r\n            setCategories( cats => [inputValue, ...cats] );\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <input \r\n                type=\"text\"\r\n                value={ inputValue }\r\n                onChange={ handleInputChange }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired \r\n}","import React from 'react'\r\n\r\nexport const GifGridItm = ( { title, url } ) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={ url } alt={ title } />\r\n            <h3>{ title }</h3>\r\n        </div>\r\n    )\r\n}\r\n","\r\nexport const getGifs = async(category) => {\r\n    try {\r\n        const apikey = \"oglguGwWjMh27ycOTFonl3RXWAq6V9bn\";\r\n        const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI( category )}&limit=10&api_key=${apikey}`;\r\n        const resp = await fetch( url );\r\n        const { data } = await resp.json();\r\n        \r\n        const gifs = data.map( img => {\r\n            return {\r\n                id: img.id,\r\n                title: img.title,\r\n                url: img.images?.downsized_medium.url\r\n            }\r\n        });\r\n        \r\n        return gifs;\r\n        \r\n    } catch (e) {\r\n        console.log(e)\r\n    }\r\n}\r\n","// import React, { useState, useEffect } from 'react';\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { GifGridItm } from './GifGridItm';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n    \r\n    const { data: images, loading } = useFetchGifs( category );\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\"> { category } </h3>\r\n            { loading && <p className=\"card-grid animate__animated animate__flash\">Loading</p> }\r\n            <div className=\"card-grid\">\r\n                { \r\n                    images.map( img => (\r\n                        <GifGridItm \r\n                            key={ img.id }\r\n                            { ...img } \r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nGifGrid.propTypes = {\r\n    category: PropTypes.string.isRequired\r\n}","import { useState, useEffect } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\"\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n\r\n    useEffect(() => {\r\n        getGifs( category )\r\n        .then( imgs => {\r\n            setState({\r\n                data: imgs,\r\n                loading: false\r\n            })\r\n        })\r\n    }, [])\r\n\r\n    return state;\r\n}\r\n","import React, {useState} from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['One Punch']);\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={ setCategories } />\r\n            \r\n            <hr />\r\n\r\n            <ol>\r\n                {\r\n                    categories.map( category => (\r\n                        <GifGrid \r\n                            key={ category }\r\n                            category={ category }\r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GifExpertApp } from './GifExpertApp';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}